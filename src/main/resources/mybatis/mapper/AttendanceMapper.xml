<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ds.dsyouth.mapper.AttendanceMapper">
	
	<!-- 팀별 출석부 명단 -->
	<resultMap id="AttendanceMap" type="Attendance">
	    <id column="id" jdbcType="INTEGER" property="id" />
	    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
	    <result column="group_grade" jdbcType="VARCHAR" property="groupGrade" />
	    <result column="mem_state" jdbcType="VARCHAR" property="memState" />
	    <result column="member_id" jdbcType="VARCHAR" property="memberId" />
	    <result column="att_yn" jdbcType="VARCHAR" property="attYn" />
		<result column="year" jdbcType="VARCHAR" property="year" />
		<result column="month" jdbcType="VARCHAR" property="month" />
		<result column="first_week" jdbcType="VARCHAR" property="firstWeek" />
		<result column="second_week" jdbcType="VARCHAR" property="secondWeek" />
		<result column="third_week" jdbcType="VARCHAR" property="thirdWeek" />
		<result column="fourth_week" jdbcType="VARCHAR" property="fourthWeek" />
		<result column="fifth_week" jdbcType="VARCHAR" property="fifthWeek" />
		<result column="total_last_year" jdbcType="INTEGER" property="totalLastYear" />
		
		<association property="member" resultMap="org.ds.dsyouth.mapper.MemberMapper.MemberMap" columnPrefix="m_" />
		<association property="team" resultMap="org.ds.dsyouth.mapper.AdminMapper.TeamMap" columnPrefix="t_" />
		<association property="group" resultMap="org.ds.dsyouth.mapper.AdminMapper.GroupMap" columnPrefix="g_" />
		<association property="samePeriod" resultMap="org.ds.dsyouth.mapper.AdminMapper.SamePeriodMap" columnPrefix="sp_" />
  	</resultMap>
  	
  	
  	<!-- 출석부 등록 -->
	<insert id="insertAttendance" parameterType="Attendance">
       INSERT INTO attendance_${year}
          <trim prefix="(" suffix=")" suffixOverrides=",">
                 <if test="groupId != null">
                       group_id,
                 </if>
                 <if test="groupGrade != null">
                       group_grade,
                 </if>
                 <if test="memState != null">
                       mem_state,
                 </if>
                 <if test="memberId != null">
                       member_id,
                 </if>
                 <if test="attYn != null">
                       att_yn,
                 </if>
                 <if test="year != null">
                       year,
                 </if>
                 <if test="month != null">
                       month,
                 </if>
                 <if test="firstWeek != null">
                       first_week,
                 </if>
                 <if test="secondWeek != null">
                       second_week,
                 </if>
                 <if test="thirdWeek != null">
                       third_week,
                 </if>
                 <if test="fourthWeek != null">
                       fourth_week,
                 </if>
                 <if test="fifthWeek != null">
                       fifth_week,
                 </if>
          </trim>
          <trim prefix="values (" suffix=")" suffixOverrides=",">
	           <if test="groupId != null">
	                 #{groupId},
	           </if>
	           <if test="groupGrade != null">
	                 #{groupGrade},
	           </if>
	           <if test="memState != null">
	                 #{memState},
	           </if>
	           <if test="memberId != null">
	                 #{memberId},
	           </if>
	           <if test="attYn != null">
	                 #{attYn},
	           </if>
	           <if test="year != null">
	                 #{year},
	           </if>
	           <if test="month != null">
	                 #{month},
	           </if>
	           <if test="firstWeek != null">
	                 #{firstWeek},
	           </if>
	           <if test="secondWeek != null">
	                 #{secondWeek},
	           </if>
	           <if test="thirdWeek != null">
	                 #{thirdWeek},
	           </if>
	           <if test="fourthWeek != null">
	                 #{fourthWeek},
	           </if>
	           <if test="fifthWeek != null">
	                 #{fifthWeek},
	           </if>
       </trim>
   </insert>
   
  	
	<!-- 팀별 출석부 명단 불러오기 -->
	<select id="selectAttendance" parameterType="org.ds.dsyouth.search.AttendanceSearch" resultMap="AttendanceMap">
		SELECT
			at.id AS id
			, at.group_id AS group_id
			, at.group_grade AS group_grade
			, at.mem_state AS mem_state
			, at.member_id AS member_id
			, at.att_yn AS att_yn
		    , at.year AS year
		    , at.month AS month
		    , at.first_week AS first_week
		    , at.second_week AS second_week
		    , at.third_week AS third_week
		    , at.fourth_week AS fourth_week
		    , at.fifth_week AS fifth_week
			, m.id AS m_id
			, if(m.team_id = '4', substring(m.name, 3), m.name) AS m_name
			, m.guider AS m_guider
		    , m.depart_id AS m_depart_id
		    , m.team_id AS m_team_id
		    , m.date_of_birth AS m_date_of_birth
		    , m.htel AS m_htel
		    , m.gender AS m_gender
		    , m.member_reg_date AS member_reg_date
		    , m.member_grad_date AS member_grad_date
		    , m.same_period_id AS m_same_period_id
		    , m.mem_state AS m_mem_state
		    , t.id AS t_id
		    , t.t_short_name AS t_t_short_name
		    , t.t_full_name AS t_t_full_name
		    , t.t_theme AS t_t_theme
		    , substring(g.g_name, 3) AS g_g_name
		    , sp.birth_year AS sp_birth_year
		    
		    <if test="year > 2019">
		    	, B.total_last_year AS total_last_year
		    </if>
		    
		FROM attendance_${year} at
		LEFT OUTER JOIN member m ON m.id = at.member_id
		LEFT OUTER JOIN member_state ms ON ms.id = at.mem_state
		LEFT OUTER JOIN team t ON t.id = m.team_id
		LEFT OUTER JOIN `group` g ON g.id = at.group_id AND g.del_yn != 'Y'
		LEFT OUTER JOIN same_period sp ON sp.id = m.same_period_id
		
		<!-- 작년 출석률을 가져오는 부분이기에 2019년도 테이블부터있기때문에 현재 year 데이터가 2020보다 작으면 안된다. -->
		<if test="year > 2019">
			LEFT OUTER JOIN (
				SELECT
					m.id AS id
					, (SUM(IF(a.first_week = 'Y', 1, 0))
	                  + SUM(IF(a.second_week = 'Y', 1, 0))
	                  + SUM(IF(a.third_week = 'Y', 1, 0))
	                  + SUM(IF(a.fourth_week = 'Y', 1, 0))
	                  + SUM(IF(a.fifth_week = 'Y', 1, 0))) AS total_last_year
				FROM attendance_${lastYear} a
				LEFT OUTER JOIN member m ON m.id = a.member_id
				LEFT OUTER JOIN team t ON t.id = m.team_id
				WHERE 1=1
					AND m.del_yn = 'N'
					AND t.id = #{teamId}
				GROUP BY a.member_id
	        ) B ON B.id = m.id
        </if>
        
		WHERE 1=1
			AND m.del_yn = 'N'
			<if test="teamId != null and teamId != '' and teamId != 0">
				AND t.id = #{teamId}
				<!-- TODO 새로 등록한 팀원이 새내기인지 새가족수료자 인지 불분명하여 아래 조건절을 줌 향후에 기능 향상 필요 -->
				<if test="teamId != 4 and teamId != 8">
					AND at.group_id != ''
				</if>
			</if>
			<if test="month != null and month != '' and month != 0">
				AND at.month = #{month}
			</if>
			
		ORDER BY 
			<choose>
				<when test="teamId == 4 or teamId == 8">
					g.g_name DESC
				</when>
				<otherwise>
					g.g_name ASC
				</otherwise>
			</choose>
			, at.group_grade DESC
			, ms.ord ASC
			
			<!-- 2020 상반기 언약팀 - 한나순 출석부 특수정렬! -->
			<choose>
				<when test="teamId == 2">
					, FIELD(m.name, '정다혜','정은혜','박성인','이혜림') DESC
					, FIELD(m.name, '최혜리','강유라','김목인','조수빈','김세훈') DESC
					, FIELD(m.name, '김도희','김예림','문신영','이은혜','이가은') DESC
				</when>
				<when test="teamId == 1">
					, FIELD(m.name, '홍영재','이승민') DESC
					, FIELD(m.name, '김범수','이정연','이신재') DESC
					, FIELD(m.name, '김도형','황성국','한희진','한혜린','김지수','김수영') DESC
				</when>
			</choose>
			
			<if test="year > 2019">
				, B.total_last_year DESC
			</if>
			
			, m.name ASC
			, at.id ASC
	</select>
	
	
	
	<!-- 출석부 체크 -->
	<update id="updateAttendanceCheck" parameterType="Attendance">
		UPDATE attendance_${year}
    	<set>
	      	<if test="firstWeek != null">
	        	first_week = #{firstWeek},
	      	</if>
	      	<if test="secondWeek != null">
	        	second_week = #{secondWeek},
	      	</if>
	      	<if test="thirdWeek != null">
	        	third_week = #{thirdWeek},
	      	</if>
	      	<if test="fourthWeek != null">
	        	fourth_week = #{fourthWeek},
	      	</if>
	      	<if test="fifthWeek != null">
	        	fifth_week = #{fifthWeek},
	      	</if>
	    </set>
		WHERE 1=1
			AND id = #{id}
	</update>
	
	
	<!-- 출석부 순 정보 입력 -->
	<update id="updateAttendanceGroup" parameterType="Attendance">
		UPDATE attendance_${year}
    	<set>
    		<if test="groupId != null">
				group_id = #{groupId},
			</if>
			<if test="groupGrade != null">
				group_grade = #{groupGrade},
			</if>
			<if test="memState != null">
				mem_state = #{memState},
			</if>
			<if test="attYn != null">
				att_yn = #{attYn},
			</if>
	      	<if test="firstWeek != null">
	        	first_week = #{firstWeek},
	      	</if>
	      	<if test="secondWeek != null">
	        	second_week = #{secondWeek},
	      	</if>
	      	<if test="thirdWeek != null">
	        	third_week = #{thirdWeek},
	      	</if>
	      	<if test="fourthWeek != null">
	        	fourth_week = #{fourthWeek},
	      	</if>
	      	<if test="fifthWeek != null">
	        	fifth_week = #{fifthWeek},
	      	</if>
	    </set>
		WHERE 1=1
			AND member_id = #{memberId}
			AND month = #{month}
	</update>
	
	
	<!-- 출석부 순장/순원 입력 -->
	<update id="updateAttendanceGroupGrade" parameterType="Attendance">
		UPDATE attendance_${year}
		SET group_grade = #{groupGrade}
		WHERE 1=1
			AND member_id = #{memberId}
			AND month = #{month}
	</update>
	
</mapper>